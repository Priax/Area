version: "3.8"
services:
  db:
    image: postgres:${VERSION_POSTGRES}
    container_name: area_database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '${PORTS_DB}:${PORTS_DB}'
    networks:
      - app-network
  server:
    ports:
      - '0.0.0.0:${PORTS_SERVER}:${PORTS_SERVER}'
    volumes:
      - ./area_backend/src:/app/src
    build:
      context: './area_backend'
      dockerfile: Dockerfile
      args:
        PORTS_SERVER: ${PORTS_SERVER}
    depends_on:
      - db
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${PORTS_DB}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORTS_DB: ${PORTS_DB}
      PORTS_SERVER: ${PORTS_SERVER}
      SPRING_SECURITY_JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SPRING_SECURITY_JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_MS}
      ADMIN_NAME: ${ADMIN_NAME}
      ADMIN_SURNAME: ${ADMIN_SURNAME}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_DATE: ${ADMIN_DATE}
      ADMIN_PHONE_NUMBER: ${ADMIN_PHONE_NUMBER}
      ADMIN_GENDER: ${ADMIN_GENDER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DISCORD_APPLICATION_ID: ${DISCORD_APPLICATION_ID}
      DISCORD_API_KEY: ${DISCORD_API_KEY}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      OSU_CLIENT_SECRET: ${OSU_CLIENT_SECRET}
      RIOT_API_KEY: ${RIOT_API_KEY}
      THREADS_APPLICATION_ID: ${THREADS_APPLICATION_ID}
      THREADS_SECRET_KEY: ${THREADS_SECRET_KEY}
  # client_mobile:
  #   volumes:
  #     - ./area_frontend/areamobile:/app
  #     - shared-data:/shared
  #   build:
  #     context: "area_frontend/areamobile"
  #     dockerfile: Dockerfile
  client_web:
    user: root
    privileged: true
    ports:
      - '${PORTS_WEB}:${PORTS_WEB}'
    volumes:
      - ./area_frontend/area:/app/
      - shared-data:/shared
    build:
     context: "area_frontend/area"
     dockerfile: Dockerfile
     args:
      PORTS_WEB: ${PORTS_WEB}
    environment:
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    depends_on:
      - server
      # - client_mobile
    entrypoint: ["/bin/sh", "-c", "npx next dev -p $PORTS_WEB"]

volumes:
  pgdata:
  shared-data:
networks:
  app-network:
    driver: bridge
